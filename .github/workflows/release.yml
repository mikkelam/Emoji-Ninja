#TODO verify this

# name: Build and Release

# on:
#   push:
#     tags:
#       - "v*"
#   workflow_dispatch:
#     inputs:
#       version:
#         description: "Version number (e.g., 1.0.0)"
#         required: true
#         default: "0.0.1"

# jobs:
#   build-macos:
#     runs-on: macos-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Xcode
#         uses: maxim-lobanov/setup-xcode@v1
#         with:
#           xcode-version: latest-stable

#       - name: Cache Swift packages
#         uses: actions/cache@v3
#         with:
#           path: .build
#           key: ${{ runner.os }}-swift-${{ hashFiles('**/Package.resolved') }}
#           restore-keys: |
#             ${{ runner.os }}-swift-

#       - name: Build app
#         run: ./build.sh --release --app-bundle --clean

#       - name: Get version
#         id: version
#         run: |
#           if [ "${{ github.event_name }}" = "push" ]; then
#             VERSION=${GITHUB_REF#refs/tags/v}
#           else
#             VERSION=${{ github.event.inputs.version }}
#           fi
#           echo "version=$VERSION" >> $GITHUB_OUTPUT
#           echo "Building version: $VERSION"

#       - name: Create distribution package
#         run: ./distribute.sh --version ${{ steps.version.outputs.version }}

#       - name: Upload DMG artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: EmojiNinja-${{ steps.version.outputs.version }}-dmg
#           path: dist/*.dmg

#       - name: Upload ZIP artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: EmojiNinja-${{ steps.version.outputs.version }}-zip
#           path: dist/*.zip

#       - name: Upload checksums
#         uses: actions/upload-artifact@v3
#         with:
#           name: checksums
#           path: dist/checksums.txt

#       - name: Create Release
#         if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
#         uses: softprops/action-gh-release@v1
#         with:
#           files: |
#             dist/*.dmg
#             dist/*.zip
#             dist/checksums.txt
#           body_path: dist/RELEASE_NOTES.md
#           draft: false
#           prerelease: false
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
